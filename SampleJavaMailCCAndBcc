package Testttt;

import java.util.ArrayList;
import java.util.Date;
import java.util.Properties;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.Authenticator;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;

public class SampleJavaMailCCAndBcc {

	private static final String MAIL_SERVER = "smtp";
	private static final String SMTP_HOST_NAME = "smtp.gmail.com";
	private static final int SMTP_HOST_PORT = 587;
	private static String USER_NAME; // GMail user name (just the part before "@gmail.com")
	private static String PASSWORD; // GMail password

	// Message info
	ArrayList<String> to; // list of recipient email addresses
	ArrayList<String> cc;
	ArrayList<String> bcc;
	static String subject = "Java Send Mail Attachement Example";
	static String body = "Welcome to Java Mail!<h1>Hello</h1>";

	// Constructor
	public SampleJavaMailCCAndBcc() {
		to = new ArrayList<String>();
		cc = new ArrayList<String>();
		bcc = new ArrayList<String>();
	}

	static void sendFromGMail(ArrayList<String> to, ArrayList<String> cc, ArrayList<String> bcc, String subject,
			String body) {

//---------------------------------------------STEP 1---------------------------------------------

		System.out.println("\n 1st ===> Setup SMTP Mail Server Properties..!");

		// Get system properties
		Properties properties = System.getProperties();

		// Setup mail server
		properties.put("mail.smtp.starttls.enable", "true");
		properties.put("mail.smtp.host", SMTP_HOST_NAME);
		properties.put("mail.smtp.user", USER_NAME);
		properties.put("mail.smtp.password", PASSWORD);
		properties.put("mail.smtp.port", SMTP_HOST_PORT);
		properties.put("mail.smtp.auth", "true");

		// ---------------------------------------------STEP
		// 2---------------------------------------------

		System.out.println("\n\n 2nd ===> Get Mail Session..");
		// Get the Session object.

		// creates a new session with an authenticator
		Authenticator auth = new Authenticator() {
			public PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication(USER_NAME, PASSWORD);
			}
		};

		Session session = Session.getInstance(properties, auth);

		// Create a default MimeMessage object.
		MimeMessage message = new MimeMessage(session);

		MimeMultipart multipart = new MimeMultipart("related");// to deleee

		try {

			// ---------------------------------------------

			// Set From: header field of the header.
			message.setFrom(new InternetAddress(USER_NAME));

			// ---------------------------------------------

			InternetAddress[] toAddress = new InternetAddress[to.size()];

			// To get the array of toaddresses
			for (int i = 0; i < to.size(); i++) {
				toAddress[i] = new InternetAddress(to.get(i));
			}

			// Set To: header field of the header.
			for (int i = 0; i < toAddress.length; i++) {
				message.addRecipient(Message.RecipientType.TO, toAddress[i]);
			}

			InternetAddress[] ccAddress = new InternetAddress[cc.size()];

			// To get the array of ccaddresses
			for (int i = 0; i < cc.size(); i++) {
				ccAddress[i] = new InternetAddress(cc.get(i));
			}

			// Set cc: header field of the header.
			for (int i = 0; i < ccAddress.length; i++) {
				message.addRecipient(Message.RecipientType.CC, ccAddress[i]);
			}

			InternetAddress[] bccAddress = new InternetAddress[bcc.size()];

			// To get the array of bccaddresses
			for (int i = 0; i < bcc.size(); i++) {
				bccAddress[i] = new InternetAddress(bcc.get(i));
			}

			// Set bcc: header field of the header.
			for (int i = 0; i < bccAddress.length; i++) {
				message.addRecipient(Message.RecipientType.BCC, bccAddress[i]);
			}

			// Set Subject: header field
			message.setSubject(subject);

			// Now set the date to actual message
			message.setSentDate(new Date());

			// Now set the actual message
			// message.setContent(body + "<img src=\"cid:image\">","text/html");

			BodyPart messageBodyPart = new MimeBodyPart();
			messageBodyPart
					.setContent(body + "<br /> Technical support <br /> Mail: technical_support@cg.solutions <br />"
							+ "<img src=\"cid:image\">", "text/html");
			multipart.addBodyPart(messageBodyPart);
			// second part (the image)
			messageBodyPart = new MimeBodyPart();
			DataSource fds = new FileDataSource("/C:/Users/Yehonatan.a/Desktop/cglogo.png");

			messageBodyPart.setDataHandler(new DataHandler(fds));
			messageBodyPart.setHeader("Content-ID", "<image>");

			// add image to the multipart
			multipart.addBodyPart(messageBodyPart);

			message.setContent(multipart);

			// ---------------------------------------------STEP
			// 3---------------------------------------------

			System.out.println("\n\n 3rd ===> Get Session and Send Mail");
			// Send message
			Transport transport = session.getTransport(MAIL_SERVER);
			transport.connect(SMTP_HOST_NAME, SMTP_HOST_PORT, USER_NAME, PASSWORD);
			transport.sendMessage(message, message.getAllRecipients());
			transport.close();
			System.out.println("Sent Message Successfully....");
		} catch (AddressException ae) {
			ae.printStackTrace();
		} catch (MessagingException me) {
			me.printStackTrace();
		}

		// ---------------------------------------------------------------------------------------------------

	}

	public void setUserAndPassword(String userName, String password) {
		USER_NAME = userName;
		PASSWORD = password;

	}
}
